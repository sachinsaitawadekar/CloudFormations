---
AWSTemplateFormatVersion: '2010-09-09'
Description: >

  This Cloudformation Template deploys the scalable option of the application server.

Parameters:
  SubscribersEMail:
    Description: E-Mail address to notify if there are any operational issues
    Type: String
    AllowedPattern: "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)"
    ConstraintDescription: Must be a valid email address.
    Default: sachin@softices.com
  PublicApplicationSubnets:
    Description: Select the list of Public Subnets
    Type: List<AWS::EC2::Subnet::Id>
  PrivateApplicationSubnets:
    Description: Select the list of Private Subnets
    Type: List<AWS::EC2::Subnet::Id>
  ApplicationInstanceType:
    Description: Instance type for the appserver
    Type: String
    Default: t3a.xlarge
    AllowedValues:
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
      - c5a.large
      - c5a.xlarge
      - c5a.2xlarge
      - c5a.4xlarge
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - r5a.large
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
  ApplicationDataVolumeSize:
    Description: Size of the application instance data volume
    Type: Number
    Default: 20
  ApplicationRootVolumeSize:
    Description: Size of the application instance data volume
    Type: Number
    Default: 15
  ApplicationMaxInstances:
    Type: Number
    Description: Maximum number of appserver instances
    Default: 2
  ApplicationMinInstances:
    Type: Number
    Description: Minimum number of appserver instances
    Default: 1
  ApplicationDesiredInstances:
    Type: Number
    Description: Desired number of appserver instances
    Default: 1
  EnvironmentStage:
    Type: String
    Description: Select the appropriate environment
    Default: stage
    AllowedValues:
      - stage
      - prod
      - dev
  PublicHostedZone:
    Description: Public Hosted zone in which the DNS entries for the ALB should be created
    Type: String
  DomainName:
    Description: Base domain name used for the instance
    Type: String
  ApplicationAmiId:
    Description: AMI id that should be used for the appserver instaces
    Type: String
  VPCID:
    Description: Reference for the VPC
    Type: String
  ACMCertArn: 
    Description: Set this parameter if you want to reuse an existing ACM certificate for your deployment
    Type: String
    Default: "AWS::NoValue"

Conditions:
  ACMNewCert: !Equals [ !Ref ACMCertArn, "AWS::NoValue" ]

Resources:
  
  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      KmsMasterKeyId: alias/aws/sns
      Subscription:
      - Endpoint:
          Ref: SubscribersEMail
        Protocol: email  

  ApplicationSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPCID
      GroupDescription: Security group for the BigBlueButton Application Host

  ApplicationSecurityGroupWebSSLPort:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      GroupId: !Ref ApplicationSecurityGroup

  ApplicationSecurityGroupWebPlainPort:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      GroupId: !Ref ApplicationSecurityGroup

  AppELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Scalelite Security Group
      VpcId: !Ref VPCID

  AppELBSecurityGroupPorts:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref AppELBSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: 0.0.0.0/0  

  AppALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: "30"
      Subnets: !Ref PublicApplicationSubnets
      SecurityGroups:
        - !Ref AppELBSecurityGroup

  PublicCertificate:      
    Condition: ACMNewCert
    Type: 'AWS::CertificateManager::Certificate'
    Properties:
      ValidationMethod: DNS
      DomainName: !Sub "*.${DomainName}"
      SubjectAlternativeNames:
        - !Ref DomainName
        - !Sub "*.${DomainName}"
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref PublicHostedZone
      ValidationMethod: DNS

  AppALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AppTG
      LoadBalancerArn: !Ref AppALB
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !If [ ACMNewCert, !Ref PublicCertificate, !Ref ACMCertArn ]

  AppALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref AppTG
      Conditions:
        - Field: path-pattern
          Values: [ / ]
      ListenerArn: !Ref AppALBListener
      Priority: 1

  AppTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: AppALB
    Properties:
      HealthCheckIntervalSeconds: 90
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 60
      HealthyThresholdCount: 2
      Port: 443
      # TargetType: !If [ Fargate, ip, instance ]
      Protocol: HTTPS
      UnhealthyThresholdCount: 2
      VpcId: !Ref VPCID

  ApplicationAutoScaling:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref PrivateApplicationSubnets
      LaunchConfigurationName: !Ref ApplicationInstanceLaunchConfiguration
      TerminationPolicies:
        - DEFAULT
      MaxSize: !Ref ApplicationMaxInstances
      MinSize: !Ref ApplicationMinInstances
      DesiredCapacity: !Ref ApplicationDesiredInstances
      TargetGroupARNs: 
        - !Ref AppTG
      NotificationConfiguration:
        TopicARN:
          Ref: NotificationTopic
        NotificationTypes:
          - autoscaling:EC2_INSTANCE_LAUNCH
          - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
          - autoscaling:EC2_INSTANCE_TERMINATE
          - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true

  ApplicationEC2Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ApplicationEC2Role
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      Policies:
        - PolicyName: "CreateTargetGroup-CF"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - ec2:DescribeInstances
                  - ec2:CreateTags
                Resource: 
                  - "*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  ApplicationEC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref ApplicationEC2Role

  ApplicationInstanceLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: false
      IamInstanceProfile: !Ref ApplicationEC2InstanceProfile
      ImageId: !Ref ApplicationAmiId
      EbsOptimized: true
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: gp2
            VolumeSize: !Ref ApplicationRootVolumeSize
            Encrypted: true
        - DeviceName: /dev/sdf
          Ebs:
            VolumeSize: !Ref ApplicationDataVolumeSize
            VolumeType: gp2
            Encrypted: true
      InstanceMonitoring: true
      InstanceType: !Ref ApplicationInstanceType
      SecurityGroups:
        - !Ref ApplicationSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          apt update -y 
          
          while fuser /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock >/dev/null 2>&1; do sleep 1; done

          DEBIAN_FRONTEND='noninteractive' apt -y -o Dpkg::Options::='--force-confdef' -o Dpkg::Options::='--force-confold' full-upgrade

          apt autoremove -y
          apt autoclean
           
          while fuser /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock >/dev/null 2>&1; do sleep 1; done
          
          apt install -y git binutils python3-pip python-pip build-essential python-dev python-setuptools jq

          pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
          pip install -U awscli


          /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ApplicationAutoScaling --region ${AWS::Region} || true

Outputs:
  ApplicationEC2InstanceProfile:
    Description: Application Instance Profile
    Value:
      Ref: ApplicationEC2InstanceProfile
  ApplicationEC2Role:
    Description: Application Instance Role
    Value:
      Ref: ApplicationEC2Role
  ApplicationAutoScaling:
    Description: Application Instance Autoscaling Group
    Value:
      Ref: ApplicationAutoScaling
  ApplicationInstanceLaunchConfiguration:
    Description: Application Instance Launch Configuration
    Value:
      Ref: ApplicationInstanceLaunchConfiguration